{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":[],"mount_file_id":"1G_ne2mcBI2ihUPKnfsmGhmrZ1guIRoFk","authorship_tag":"ABX9TyOQrSfwa5oH9xV4G1qapTmK"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"Bm52Lhmqaxbq","executionInfo":{"status":"ok","timestamp":1664204676873,"user_tz":180,"elapsed":441,"user":{"displayName":"Tomas Ezequiel Galian","userId":"10920691488309285943"}}},"outputs":[],"source":["import pandas as pd"]},{"cell_type":"code","source":["finales = pd.read_csv('/content/drive/MyDrive/Mens_Tennis_Grand_Slam_Winner.csv')\n","finales"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"LJwqTfeqa0rG","executionInfo":{"status":"ok","timestamp":1664204677192,"user_tz":180,"elapsed":321,"user":{"displayName":"Tomas Ezequiel Galian","userId":"10920691488309285943"}},"outputId":"20d4c3db-2521-4f16-984b-7bdffe050924"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     YEAR       TOURNAMENT           WINNER           RUNNER-UP  \\\n","0    2022      French Open     Rafael Nadal         Casper Rudd   \n","1    2022  Australian Open     Rafael Nadal     Daniil Medvedev   \n","2    2021        U.S. Open  Daniil Medvedev      Novak Djokovic   \n","3    2021        Wimbledon   Novak Djokovic   Matteo Berrettini   \n","4    2021      French Open   Novak Djokovic  Stefanos Tsitsipas   \n","..    ...              ...              ...                 ...   \n","284  1951  Australian Open      Dick Savitt        Ken McGregor   \n","285  1950        U.S. Open    Arthur Larsen        Herbert Flam   \n","286  1950        Wimbledon       J.E. Patty       Frank Sedgman   \n","287  1950      French Open      Budge Patty     Jaroslav Drobny   \n","288  1950  Australian Open    Frank Sedgman        Ken McGregor   \n","\n","    WINNER_NATIONALITY  WINNER_ATP_RANKING  RUNNER-UP_ATP_RANKING  \\\n","0              Spanish                 5.0                    8.0   \n","1              Spanish                 5.0                    2.0   \n","2              Russian                 2.0                    1.0   \n","3              Serbian                 1.0                    7.0   \n","4              Serbian                 1.0                    4.0   \n","..                 ...                 ...                    ...   \n","284           American                 NaN                    NaN   \n","285           American                 NaN                    NaN   \n","286           American                 NaN                    NaN   \n","287           American                 NaN                    NaN   \n","288         Australian                 NaN                    NaN   \n","\n","    WINNER_LEFT_OR_RIGHT_HANDED     TOURNAMENT_SURFACE  WINNER_PRIZE  \n","0                          left                   Clay     1870000.0  \n","1                          left  Plexicushion Prestige     4400000.0  \n","2                         right    DecoTurf - outdoors     2500000.0  \n","3                         right        Grass / Outdoor     1700000.0  \n","4                         right                   Clay     1400000.0  \n","..                          ...                    ...           ...  \n","284                       right                  Grass           NaN  \n","285                       right               outdoors           NaN  \n","286                       right        Grass / Outdoor           NaN  \n","287                       right                   Clay           NaN  \n","288                       right                  Grass           NaN  \n","\n","[289 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-834efa7b-a4ac-41b4-b5e3-0c570d2896d8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>YEAR</th>\n","      <th>TOURNAMENT</th>\n","      <th>WINNER</th>\n","      <th>RUNNER-UP</th>\n","      <th>WINNER_NATIONALITY</th>\n","      <th>WINNER_ATP_RANKING</th>\n","      <th>RUNNER-UP_ATP_RANKING</th>\n","      <th>WINNER_LEFT_OR_RIGHT_HANDED</th>\n","      <th>TOURNAMENT_SURFACE</th>\n","      <th>WINNER_PRIZE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2022</td>\n","      <td>French Open</td>\n","      <td>Rafael Nadal</td>\n","      <td>Casper Rudd</td>\n","      <td>Spanish</td>\n","      <td>5.0</td>\n","      <td>8.0</td>\n","      <td>left</td>\n","      <td>Clay</td>\n","      <td>1870000.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2022</td>\n","      <td>Australian Open</td>\n","      <td>Rafael Nadal</td>\n","      <td>Daniil Medvedev</td>\n","      <td>Spanish</td>\n","      <td>5.0</td>\n","      <td>2.0</td>\n","      <td>left</td>\n","      <td>Plexicushion Prestige</td>\n","      <td>4400000.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2021</td>\n","      <td>U.S. Open</td>\n","      <td>Daniil Medvedev</td>\n","      <td>Novak Djokovic</td>\n","      <td>Russian</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>right</td>\n","      <td>DecoTurf - outdoors</td>\n","      <td>2500000.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2021</td>\n","      <td>Wimbledon</td>\n","      <td>Novak Djokovic</td>\n","      <td>Matteo Berrettini</td>\n","      <td>Serbian</td>\n","      <td>1.0</td>\n","      <td>7.0</td>\n","      <td>right</td>\n","      <td>Grass / Outdoor</td>\n","      <td>1700000.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2021</td>\n","      <td>French Open</td>\n","      <td>Novak Djokovic</td>\n","      <td>Stefanos Tsitsipas</td>\n","      <td>Serbian</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>right</td>\n","      <td>Clay</td>\n","      <td>1400000.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>284</th>\n","      <td>1951</td>\n","      <td>Australian Open</td>\n","      <td>Dick Savitt</td>\n","      <td>Ken McGregor</td>\n","      <td>American</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>right</td>\n","      <td>Grass</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>285</th>\n","      <td>1950</td>\n","      <td>U.S. Open</td>\n","      <td>Arthur Larsen</td>\n","      <td>Herbert Flam</td>\n","      <td>American</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>right</td>\n","      <td>outdoors</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>286</th>\n","      <td>1950</td>\n","      <td>Wimbledon</td>\n","      <td>J.E. Patty</td>\n","      <td>Frank Sedgman</td>\n","      <td>American</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>right</td>\n","      <td>Grass / Outdoor</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>287</th>\n","      <td>1950</td>\n","      <td>French Open</td>\n","      <td>Budge Patty</td>\n","      <td>Jaroslav Drobny</td>\n","      <td>American</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>right</td>\n","      <td>Clay</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>288</th>\n","      <td>1950</td>\n","      <td>Australian Open</td>\n","      <td>Frank Sedgman</td>\n","      <td>Ken McGregor</td>\n","      <td>Australian</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>right</td>\n","      <td>Grass</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>289 rows Ã— 10 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-834efa7b-a4ac-41b4-b5e3-0c570d2896d8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-834efa7b-a4ac-41b4-b5e3-0c570d2896d8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-834efa7b-a4ac-41b4-b5e3-0c570d2896d8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["BIG3 = ['Rafael Nadal','Roger Federer','Novak Djokovic']"],"metadata":{"id":"hfM-MH2XBAUE","executionInfo":{"status":"ok","timestamp":1664204709072,"user_tz":180,"elapsed":349,"user":{"displayName":"Tomas Ezequiel Galian","userId":"10920691488309285943"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["eraAbierta = finales[finales['YEAR']>1970]\n","eraAbierta['Big3'] = eraAbierta['WINNER'].isin(BIG3)\n","eraAbierta"],"metadata":{"id":"vfnmKiPlB57M","executionInfo":{"status":"ok","timestamp":1664204944319,"user_tz":180,"elapsed":4,"user":{"displayName":"Tomas Ezequiel Galian","userId":"10920691488309285943"}},"colab":{"base_uri":"https://localhost:8080/","height":528},"outputId":"07789e8b-ec5d-4323-87f5-2823eb4b08b6"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n"]},{"output_type":"execute_result","data":{"text/plain":["     YEAR       TOURNAMENT           WINNER           RUNNER-UP  \\\n","0    2022      French Open     Rafael Nadal         Casper Rudd   \n","1    2022  Australian Open     Rafael Nadal     Daniil Medvedev   \n","2    2021        U.S. Open  Daniil Medvedev      Novak Djokovic   \n","3    2021        Wimbledon   Novak Djokovic   Matteo Berrettini   \n","4    2021      French Open   Novak Djokovic  Stefanos Tsitsipas   \n","..    ...              ...              ...                 ...   \n","200  1972  Australian Open     Ken Rosewall        Mal Anderson   \n","201  1971        U.S. Open       Stan Smith           Jan Kodes   \n","202  1971        Wimbledon    John Newcombe          Stan Smith   \n","203  1971      French Open        Jan Kodes        Ilie Nastase   \n","204  1971  Australian Open     Ken Rosewall         Arthur Ashe   \n","\n","    WINNER_NATIONALITY  WINNER_ATP_RANKING  RUNNER-UP_ATP_RANKING  \\\n","0              Spanish                 5.0                    8.0   \n","1              Spanish                 5.0                    2.0   \n","2              Russian                 2.0                    1.0   \n","3              Serbian                 1.0                    7.0   \n","4              Serbian                 1.0                    4.0   \n","..                 ...                 ...                    ...   \n","200         Australian                 NaN                    NaN   \n","201           American                 NaN                    NaN   \n","202         Australian                 NaN                    NaN   \n","203              Czech                 NaN                    NaN   \n","204         Australian                 NaN                    NaN   \n","\n","    WINNER_LEFT_OR_RIGHT_HANDED     TOURNAMENT_SURFACE  WINNER_PRIZE   Big3  \n","0                          left                   Clay     1870000.0   True  \n","1                          left  Plexicushion Prestige     4400000.0   True  \n","2                         right    DecoTurf - outdoors     2500000.0  False  \n","3                         right        Grass / Outdoor     1700000.0   True  \n","4                         right                   Clay     1400000.0   True  \n","..                          ...                    ...           ...    ...  \n","200                       right                  Grass        2000.0  False  \n","201                       right               outdoors       15000.0  False  \n","202                       right        Grass / Outdoor        3750.0  False  \n","203                       right                   Clay       48000.0  False  \n","204                       right                  Grass        9000.0  False  \n","\n","[205 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-8caeca01-15e4-478e-815e-755d6d4f90e2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>YEAR</th>\n","      <th>TOURNAMENT</th>\n","      <th>WINNER</th>\n","      <th>RUNNER-UP</th>\n","      <th>WINNER_NATIONALITY</th>\n","      <th>WINNER_ATP_RANKING</th>\n","      <th>RUNNER-UP_ATP_RANKING</th>\n","      <th>WINNER_LEFT_OR_RIGHT_HANDED</th>\n","      <th>TOURNAMENT_SURFACE</th>\n","      <th>WINNER_PRIZE</th>\n","      <th>Big3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2022</td>\n","      <td>French Open</td>\n","      <td>Rafael Nadal</td>\n","      <td>Casper Rudd</td>\n","      <td>Spanish</td>\n","      <td>5.0</td>\n","      <td>8.0</td>\n","      <td>left</td>\n","      <td>Clay</td>\n","      <td>1870000.0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2022</td>\n","      <td>Australian Open</td>\n","      <td>Rafael Nadal</td>\n","      <td>Daniil Medvedev</td>\n","      <td>Spanish</td>\n","      <td>5.0</td>\n","      <td>2.0</td>\n","      <td>left</td>\n","      <td>Plexicushion Prestige</td>\n","      <td>4400000.0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2021</td>\n","      <td>U.S. Open</td>\n","      <td>Daniil Medvedev</td>\n","      <td>Novak Djokovic</td>\n","      <td>Russian</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>right</td>\n","      <td>DecoTurf - outdoors</td>\n","      <td>2500000.0</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2021</td>\n","      <td>Wimbledon</td>\n","      <td>Novak Djokovic</td>\n","      <td>Matteo Berrettini</td>\n","      <td>Serbian</td>\n","      <td>1.0</td>\n","      <td>7.0</td>\n","      <td>right</td>\n","      <td>Grass / Outdoor</td>\n","      <td>1700000.0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2021</td>\n","      <td>French Open</td>\n","      <td>Novak Djokovic</td>\n","      <td>Stefanos Tsitsipas</td>\n","      <td>Serbian</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>right</td>\n","      <td>Clay</td>\n","      <td>1400000.0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>200</th>\n","      <td>1972</td>\n","      <td>Australian Open</td>\n","      <td>Ken Rosewall</td>\n","      <td>Mal Anderson</td>\n","      <td>Australian</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>right</td>\n","      <td>Grass</td>\n","      <td>2000.0</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>201</th>\n","      <td>1971</td>\n","      <td>U.S. Open</td>\n","      <td>Stan Smith</td>\n","      <td>Jan Kodes</td>\n","      <td>American</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>right</td>\n","      <td>outdoors</td>\n","      <td>15000.0</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>202</th>\n","      <td>1971</td>\n","      <td>Wimbledon</td>\n","      <td>John Newcombe</td>\n","      <td>Stan Smith</td>\n","      <td>Australian</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>right</td>\n","      <td>Grass / Outdoor</td>\n","      <td>3750.0</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>203</th>\n","      <td>1971</td>\n","      <td>French Open</td>\n","      <td>Jan Kodes</td>\n","      <td>Ilie Nastase</td>\n","      <td>Czech</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>right</td>\n","      <td>Clay</td>\n","      <td>48000.0</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>204</th>\n","      <td>1971</td>\n","      <td>Australian Open</td>\n","      <td>Ken Rosewall</td>\n","      <td>Arthur Ashe</td>\n","      <td>Australian</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>right</td>\n","      <td>Grass</td>\n","      <td>9000.0</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>205 rows Ã— 11 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8caeca01-15e4-478e-815e-755d6d4f90e2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8caeca01-15e4-478e-815e-755d6d4f90e2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8caeca01-15e4-478e-815e-755d6d4f90e2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["def esBig3(jugador):\n","  if jugador in(BIG3):\n","    return True\n","  else:\n","    return False"],"metadata":{"id":"6N9hP2rPBBBZ","executionInfo":{"status":"ok","timestamp":1664204940881,"user_tz":180,"elapsed":256,"user":{"displayName":"Tomas Ezequiel Galian","userId":"10920691488309285943"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt #Pylplot te permite hacer cosas sencillas\n","import seaborn as sns #Seaborn ter permite hacer cosas mas chetas\n","plt.figure(dpi=150)\n","sns.countplot(eraAbierta['WINNER'].map(esBig3))\n","plt.xticks(rotation=90)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":647},"id":"gMFcC8oSbNJm","executionInfo":{"status":"ok","timestamp":1664204941630,"user_tz":180,"elapsed":448,"user":{"displayName":"Tomas Ezequiel Galian","userId":"10920691488309285943"}},"outputId":"5fb3f052-6536-421f-c8e5-6eada9dcce3f"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n"]},{"output_type":"execute_result","data":{"text/plain":["(array([0, 1]), <a list of 2 Text major ticklabel objects>)"]},"metadata":{},"execution_count":9},{"output_type":"display_data","data":{"text/plain":["<Figure size 900x600 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plt.figure(dpi=150)\n","sns.countplot(eraAbierta['WINNER_NATIONALITY'])\n","plt.xticks(rotation=90)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":773},"id":"nYFQv_4vCDLS","executionInfo":{"status":"ok","timestamp":1664204951675,"user_tz":180,"elapsed":833,"user":{"displayName":"Tomas Ezequiel Galian","userId":"10920691488309285943"}},"outputId":"623f8311-a2ae-41f7-bc71-f7ff4ac78bb1"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n"]},{"output_type":"execute_result","data":{"text/plain":["(array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\n","        17, 18, 19]), <a list of 20 Text major ticklabel objects>)"]},"metadata":{},"execution_count":11},{"output_type":"display_data","data":{"text/plain":["<Figure size 900x600 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["finalesPost = finales[finales['YEAR']>2002]"],"metadata":{"id":"VdygUoDTbqcf","executionInfo":{"status":"ok","timestamp":1664204960807,"user_tz":180,"elapsed":263,"user":{"displayName":"Tomas Ezequiel Galian","userId":"10920691488309285943"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["def ganadores (ganador):\n","  if ganador not in(BIG3D):\n","    return 'Otros'\n","  else:\n","    return ganador"],"metadata":{"id":"y4JL1p87kkc8","executionInfo":{"status":"ok","timestamp":1664204977716,"user_tz":180,"elapsed":535,"user":{"displayName":"Tomas Ezequiel Galian","userId":"10920691488309285943"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["BIG3D = ['Rafael Nadal','Roger Federer','Novak Djokovic','Juan Martin del Potro']"],"metadata":{"id":"4EdzYPx7C5Xi","executionInfo":{"status":"ok","timestamp":1664204979068,"user_tz":180,"elapsed":2,"user":{"displayName":"Tomas Ezequiel Galian","userId":"10920691488309285943"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["finalesPost['WINNER'] = finalesPost['WINNER'].map(ganadores)\n","finalesPost"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":528},"id":"kF6tjV75jN4Q","executionInfo":{"status":"ok","timestamp":1664204979379,"user_tz":180,"elapsed":4,"user":{"displayName":"Tomas Ezequiel Galian","userId":"10920691488309285943"}},"outputId":"f03b18e9-3086-4d31-eac8-6b155dceb155"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"Entry point for launching an IPython kernel.\n"]},{"output_type":"execute_result","data":{"text/plain":["    YEAR       TOURNAMENT          WINNER            RUNNER-UP  \\\n","0   2022      French Open    Rafael Nadal          Casper Rudd   \n","1   2022  Australian Open    Rafael Nadal      Daniil Medvedev   \n","2   2021        U.S. Open           Otros       Novak Djokovic   \n","3   2021        Wimbledon  Novak Djokovic    Matteo Berrettini   \n","4   2021      French Open  Novak Djokovic   Stefanos Tsitsipas   \n","..   ...              ...             ...                  ...   \n","72  2004  Australian Open   Roger Federer          Marat Safin   \n","73  2003        U.S. Open           Otros  Juan Carlos Ferrero   \n","74  2003        Wimbledon   Roger Federer   Mark Philippoussis   \n","75  2003      French Open           Otros       Martin Verkerk   \n","76  2003  Australian Open           Otros    Rainer Schuettler   \n","\n","   WINNER_NATIONALITY  WINNER_ATP_RANKING  RUNNER-UP_ATP_RANKING  \\\n","0             Spanish                 5.0                    8.0   \n","1             Spanish                 5.0                    2.0   \n","2             Russian                 2.0                    1.0   \n","3             Serbian                 1.0                    7.0   \n","4             Serbian                 1.0                    4.0   \n","..                ...                 ...                    ...   \n","72              Swiss                 NaN                    NaN   \n","73           American                 NaN                    NaN   \n","74              Swiss                 NaN                    NaN   \n","75            Spanish                 NaN                    NaN   \n","76           American                 NaN                    NaN   \n","\n","   WINNER_LEFT_OR_RIGHT_HANDED     TOURNAMENT_SURFACE  WINNER_PRIZE  \n","0                         left                   Clay     1870000.0  \n","1                         left  Plexicushion Prestige     4400000.0  \n","2                        right    DecoTurf - outdoors     2500000.0  \n","3                        right        Grass / Outdoor     1700000.0  \n","4                        right                   Clay     1400000.0  \n","..                         ...                    ...           ...  \n","72                       right            Rebound Ace     1200000.0  \n","73                       right    DecoTurf - outdoors     1000000.0  \n","74                       right        Grass / Outdoor      575000.0  \n","75                       right                   Clay      840000.0  \n","76                       right            Rebound Ace     1127850.0  \n","\n","[77 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-b2ffee9b-7ee2-4073-a2bb-aefdd5c86cc5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>YEAR</th>\n","      <th>TOURNAMENT</th>\n","      <th>WINNER</th>\n","      <th>RUNNER-UP</th>\n","      <th>WINNER_NATIONALITY</th>\n","      <th>WINNER_ATP_RANKING</th>\n","      <th>RUNNER-UP_ATP_RANKING</th>\n","      <th>WINNER_LEFT_OR_RIGHT_HANDED</th>\n","      <th>TOURNAMENT_SURFACE</th>\n","      <th>WINNER_PRIZE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2022</td>\n","      <td>French Open</td>\n","      <td>Rafael Nadal</td>\n","      <td>Casper Rudd</td>\n","      <td>Spanish</td>\n","      <td>5.0</td>\n","      <td>8.0</td>\n","      <td>left</td>\n","      <td>Clay</td>\n","      <td>1870000.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2022</td>\n","      <td>Australian Open</td>\n","      <td>Rafael Nadal</td>\n","      <td>Daniil Medvedev</td>\n","      <td>Spanish</td>\n","      <td>5.0</td>\n","      <td>2.0</td>\n","      <td>left</td>\n","      <td>Plexicushion Prestige</td>\n","      <td>4400000.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2021</td>\n","      <td>U.S. Open</td>\n","      <td>Otros</td>\n","      <td>Novak Djokovic</td>\n","      <td>Russian</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>right</td>\n","      <td>DecoTurf - outdoors</td>\n","      <td>2500000.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2021</td>\n","      <td>Wimbledon</td>\n","      <td>Novak Djokovic</td>\n","      <td>Matteo Berrettini</td>\n","      <td>Serbian</td>\n","      <td>1.0</td>\n","      <td>7.0</td>\n","      <td>right</td>\n","      <td>Grass / Outdoor</td>\n","      <td>1700000.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2021</td>\n","      <td>French Open</td>\n","      <td>Novak Djokovic</td>\n","      <td>Stefanos Tsitsipas</td>\n","      <td>Serbian</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>right</td>\n","      <td>Clay</td>\n","      <td>1400000.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>72</th>\n","      <td>2004</td>\n","      <td>Australian Open</td>\n","      <td>Roger Federer</td>\n","      <td>Marat Safin</td>\n","      <td>Swiss</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>right</td>\n","      <td>Rebound Ace</td>\n","      <td>1200000.0</td>\n","    </tr>\n","    <tr>\n","      <th>73</th>\n","      <td>2003</td>\n","      <td>U.S. Open</td>\n","      <td>Otros</td>\n","      <td>Juan Carlos Ferrero</td>\n","      <td>American</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>right</td>\n","      <td>DecoTurf - outdoors</td>\n","      <td>1000000.0</td>\n","    </tr>\n","    <tr>\n","      <th>74</th>\n","      <td>2003</td>\n","      <td>Wimbledon</td>\n","      <td>Roger Federer</td>\n","      <td>Mark Philippoussis</td>\n","      <td>Swiss</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>right</td>\n","      <td>Grass / Outdoor</td>\n","      <td>575000.0</td>\n","    </tr>\n","    <tr>\n","      <th>75</th>\n","      <td>2003</td>\n","      <td>French Open</td>\n","      <td>Otros</td>\n","      <td>Martin Verkerk</td>\n","      <td>Spanish</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>right</td>\n","      <td>Clay</td>\n","      <td>840000.0</td>\n","    </tr>\n","    <tr>\n","      <th>76</th>\n","      <td>2003</td>\n","      <td>Australian Open</td>\n","      <td>Otros</td>\n","      <td>Rainer Schuettler</td>\n","      <td>American</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>right</td>\n","      <td>Rebound Ace</td>\n","      <td>1127850.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>77 rows Ã— 10 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b2ffee9b-7ee2-4073-a2bb-aefdd5c86cc5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b2ffee9b-7ee2-4073-a2bb-aefdd5c86cc5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b2ffee9b-7ee2-4073-a2bb-aefdd5c86cc5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["finalesPost[finalesPost['YEAR']==2005]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"oHdifDt0DBYq","executionInfo":{"status":"ok","timestamp":1664204982159,"user_tz":180,"elapsed":4,"user":{"displayName":"Tomas Ezequiel Galian","userId":"10920691488309285943"}},"outputId":"a4b903a1-b8d1-492c-ea7e-df8106619c25"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    YEAR       TOURNAMENT         WINNER       RUNNER-UP WINNER_NATIONALITY  \\\n","65  2005        U.S. Open  Roger Federer    Andre Agassi              Swiss   \n","66  2005        Wimbledon  Roger Federer    Andy Roddick              Swiss   \n","67  2005      French Open   Rafael Nadal  Mariano Puerta            Spanish   \n","68  2005  Australian Open          Otros  Lleyton Hewitt            Russian   \n","\n","    WINNER_ATP_RANKING  RUNNER-UP_ATP_RANKING WINNER_LEFT_OR_RIGHT_HANDED  \\\n","65                 NaN                    NaN                       right   \n","66                 NaN                    NaN                       right   \n","67                 NaN                    NaN                        left   \n","68                 NaN                    NaN                       right   \n","\n","     TOURNAMENT_SURFACE  WINNER_PRIZE  \n","65  DecoTurf - outdoors     1100000.0  \n","66      Grass / Outdoor      630000.0  \n","67                 Clay      880000.0  \n","68          Rebound Ace     1206620.0  "],"text/html":["\n","  <div id=\"df-c49fc830-25a2-41eb-93e3-0fcf0594cb74\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>YEAR</th>\n","      <th>TOURNAMENT</th>\n","      <th>WINNER</th>\n","      <th>RUNNER-UP</th>\n","      <th>WINNER_NATIONALITY</th>\n","      <th>WINNER_ATP_RANKING</th>\n","      <th>RUNNER-UP_ATP_RANKING</th>\n","      <th>WINNER_LEFT_OR_RIGHT_HANDED</th>\n","      <th>TOURNAMENT_SURFACE</th>\n","      <th>WINNER_PRIZE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>65</th>\n","      <td>2005</td>\n","      <td>U.S. Open</td>\n","      <td>Roger Federer</td>\n","      <td>Andre Agassi</td>\n","      <td>Swiss</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>right</td>\n","      <td>DecoTurf - outdoors</td>\n","      <td>1100000.0</td>\n","    </tr>\n","    <tr>\n","      <th>66</th>\n","      <td>2005</td>\n","      <td>Wimbledon</td>\n","      <td>Roger Federer</td>\n","      <td>Andy Roddick</td>\n","      <td>Swiss</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>right</td>\n","      <td>Grass / Outdoor</td>\n","      <td>630000.0</td>\n","    </tr>\n","    <tr>\n","      <th>67</th>\n","      <td>2005</td>\n","      <td>French Open</td>\n","      <td>Rafael Nadal</td>\n","      <td>Mariano Puerta</td>\n","      <td>Spanish</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>left</td>\n","      <td>Clay</td>\n","      <td>880000.0</td>\n","    </tr>\n","    <tr>\n","      <th>68</th>\n","      <td>2005</td>\n","      <td>Australian Open</td>\n","      <td>Otros</td>\n","      <td>Lleyton Hewitt</td>\n","      <td>Russian</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>right</td>\n","      <td>Rebound Ace</td>\n","      <td>1206620.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c49fc830-25a2-41eb-93e3-0fcf0594cb74')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c49fc830-25a2-41eb-93e3-0fcf0594cb74 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c49fc830-25a2-41eb-93e3-0fcf0594cb74');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["import plotly.express as px\n","color_discrete_map = {'Rafael Nadal': 'rgb(255,81,44)', 'Novak Djokovic': 'rgb(23,121,177)', 'Roger Federer': 'rgb(107,177,23)', 'Otros': 'rgb(0,0,0)','Juan Martin del Potro':'rgb(200,200,200)'}\n","fig = px.scatter(finalesPost,x='YEAR',y='TOURNAMENT',color='WINNER', color_discrete_map=color_discrete_map,title=\"Â¿Por que el big 3 marco una epoca?\") #La cagada es que aca solo veo un dataframe\n","fig.update_traces(marker=dict(size=12,line=dict(width=2,color='DarkSlateGrey')),selector=dict(mode='markers'))\n","fig.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"TS7cmYcRdfc1","executionInfo":{"status":"ok","timestamp":1664204989060,"user_tz":180,"elapsed":2317,"user":{"displayName":"Tomas Ezequiel Galian","userId":"10920691488309285943"}},"outputId":"883276c1-0884-48ea-c680-587a15048b58"},"execution_count":18,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"9c65e43c-1aed-4bcc-b85e-ca314331b95d\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"9c65e43c-1aed-4bcc-b85e-ca314331b95d\")) {                    Plotly.newPlot(                        \"9c65e43c-1aed-4bcc-b85e-ca314331b95d\",                        [{\"hovertemplate\":\"WINNER=Rafael Nadal<br>YEAR=%{x}<br>TOURNAMENT=%{y}<extra></extra>\",\"legendgroup\":\"Rafael Nadal\",\"marker\":{\"color\":\"rgb(255,81,44)\",\"symbol\":\"circle\",\"line\":{\"color\":\"DarkSlateGrey\",\"width\":2},\"size\":12},\"mode\":\"markers\",\"name\":\"Rafael Nadal\",\"orientation\":\"h\",\"showlegend\":true,\"x\":[2022,2022,2020,2019,2019,2018,2017,2017,2014,2013,2013,2012,2011,2010,2010,2010,2009,2008,2008,2007,2006,2005],\"xaxis\":\"x\",\"y\":[\"French Open\",\"Australian Open\",\"French Open\",\"U.S. Open\",\"French Open\",\"French Open\",\"U.S. Open\",\"French Open\",\"French Open\",\"U.S. Open\",\"French Open\",\"French Open\",\"French Open\",\"U.S. Open\",\"Wimbledon\",\"French Open\",\"Australian Open\",\"Wimbledon\",\"French Open\",\"French Open\",\"French Open\",\"French Open\"],\"yaxis\":\"y\",\"type\":\"scatter\"},{\"hovertemplate\":\"WINNER=Otros<br>YEAR=%{x}<br>TOURNAMENT=%{y}<extra></extra>\",\"legendgroup\":\"Otros\",\"marker\":{\"color\":\"rgb(0,0,0)\",\"symbol\":\"circle\",\"line\":{\"color\":\"DarkSlateGrey\",\"width\":2},\"size\":12},\"mode\":\"markers\",\"name\":\"Otros\",\"orientation\":\"h\",\"showlegend\":true,\"x\":[2021,2020,2016,2016,2015,2014,2014,2013,2012,2005,2004,2003,2003,2003],\"xaxis\":\"x\",\"y\":[\"U.S. Open\",\"U.S. Open\",\"U.S. Open\",\"Wimbledon\",\"French Open\",\"U.S. Open\",\"Australian Open\",\"Wimbledon\",\"U.S. Open\",\"Australian Open\",\"French Open\",\"U.S. Open\",\"French Open\",\"Australian Open\"],\"yaxis\":\"y\",\"type\":\"scatter\"},{\"hovertemplate\":\"WINNER=Novak Djokovic<br>YEAR=%{x}<br>TOURNAMENT=%{y}<extra></extra>\",\"legendgroup\":\"Novak Djokovic\",\"marker\":{\"color\":\"rgb(23,121,177)\",\"symbol\":\"circle\",\"line\":{\"color\":\"DarkSlateGrey\",\"width\":2},\"size\":12},\"mode\":\"markers\",\"name\":\"Novak Djokovic\",\"orientation\":\"h\",\"showlegend\":true,\"x\":[2021,2021,2021,2020,2019,2019,2018,2018,2016,2016,2015,2015,2015,2014,2013,2012,2011,2011,2011,2008],\"xaxis\":\"x\",\"y\":[\"Wimbledon\",\"French Open\",\"Australian Open\",\"Australian Open\",\"Wimbledon\",\"Australian Open\",\"U.S. Open\",\"Wimbledon\",\"French Open\",\"Australian Open\",\"U.S. Open\",\"Wimbledon\",\"Australian Open\",\"Wimbledon\",\"Australian Open\",\"Australian Open\",\"U.S. Open\",\"Wimbledon\",\"Australian Open\",\"Australian Open\"],\"yaxis\":\"y\",\"type\":\"scatter\"},{\"hovertemplate\":\"WINNER=Roger Federer<br>YEAR=%{x}<br>TOURNAMENT=%{y}<extra></extra>\",\"legendgroup\":\"Roger Federer\",\"marker\":{\"color\":\"rgb(107,177,23)\",\"symbol\":\"circle\",\"line\":{\"color\":\"DarkSlateGrey\",\"width\":2},\"size\":12},\"mode\":\"markers\",\"name\":\"Roger Federer\",\"orientation\":\"h\",\"showlegend\":true,\"x\":[2018,2017,2017,2012,2010,2009,2009,2008,2007,2007,2007,2006,2006,2006,2005,2005,2004,2004,2004,2003],\"xaxis\":\"x\",\"y\":[\"Australian Open\",\"Wimbledon\",\"Australian Open\",\"Wimbledon\",\"Australian Open\",\"Wimbledon\",\"French Open\",\"U.S. Open\",\"U.S. Open\",\"Wimbledon\",\"Australian Open\",\"U.S. Open\",\"Wimbledon\",\"Australian Open\",\"U.S. Open\",\"Wimbledon\",\"U.S. Open\",\"Wimbledon\",\"Australian Open\",\"Wimbledon\"],\"yaxis\":\"y\",\"type\":\"scatter\"},{\"hovertemplate\":\"WINNER=Juan Martin del Potro<br>YEAR=%{x}<br>TOURNAMENT=%{y}<extra></extra>\",\"legendgroup\":\"Juan Martin del Potro\",\"marker\":{\"color\":\"rgb(200,200,200)\",\"symbol\":\"circle\",\"line\":{\"color\":\"DarkSlateGrey\",\"width\":2},\"size\":12},\"mode\":\"markers\",\"name\":\"Juan Martin del Potro\",\"orientation\":\"h\",\"showlegend\":true,\"x\":[2009],\"xaxis\":\"x\",\"y\":[\"U.S. Open\"],\"yaxis\":\"y\",\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"YEAR\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"TOURNAMENT\"}},\"legend\":{\"title\":{\"text\":\"WINNER\"},\"tracegroupgap\":0},\"title\":{\"text\":\"\\u00bfPor que el big 3 marco una epoca?\"}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('9c65e43c-1aed-4bcc-b85e-ca314331b95d');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"0ralS8T7InfI"},"execution_count":null,"outputs":[]}]}